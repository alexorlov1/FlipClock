{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.38.0",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "flipclock!",
  "docComment": "",
  "name": "flipclock",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "flipclock!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "flipclock!add:function(1)",
          "docComment": "/**\n * Add the duration to the given date.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function add(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", duration: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "flipclock!Duration:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "date",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "duration",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "add"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!addDays:function(1)",
          "docComment": "/**\n * Add x days to the given date.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addDays(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", amount: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "date",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "amount",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "addDays"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!addMonths:function(1)",
          "docComment": "/**\n * Add x months to the given date.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addMonths(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", amount: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "date",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "amount",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "addMonths"
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!Alphanumeric:class",
          "docComment": "/**\n * This face is designed to flip through alphanumeric values similar to a flip board at a train station. The value will incrementally/decrementally flip the digits until it reaches the target.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Alphanumeric implements "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Alphanumeric",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flipclock!Alphanumeric:constructor(1)",
              "docComment": "/**\n * Instantiate the clock face.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "AlphanumericProps",
                  "canonicalReference": "flipclock!AlphanumericProps:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Alphanumeric#afterCreate:member(1)",
              "docComment": "/**\n * Update the direction before the interval starts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "afterCreate(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "afterCreate"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Alphanumeric#backwards:member",
              "docComment": "/**\n * The sequencer method to call.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get backwards(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "backwards",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Alphanumeric#direction:member",
              "docComment": "/**\n * The flip direction. If auto, the direction is automatically determined based on the current value and target value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly direction: "
                },
                {
                  "kind": "Content",
                  "text": "'auto' | 'forwards' | 'backwards'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "direction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Alphanumeric#interval:member(1)",
              "docComment": "/**\n * This method is called with every interval, or every time the clock should change, and handles the actual incrementing and decrementing the clock's `FaceValue`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interval(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "interval"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Alphanumeric#sequencer:member",
              "docComment": "/**\n * Override how digits are sequenced.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sequencer: "
                },
                {
                  "kind": "Reference",
                  "text": "SequencerContext",
                  "canonicalReference": "flipclock!SequencerContext:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sequencer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Alphanumeric#skipChars:member",
              "docComment": "/**\n * The number of characters to skip during the incrementing/decrementing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly skipChars?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skipChars",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Alphanumeric#targetValue:member",
              "docComment": "/**\n * The face's target value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetValue: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<string | "
                },
                {
                  "kind": "Reference",
                  "text": "DigitizedValues",
                  "canonicalReference": "flipclock!DigitizedValues:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Alphanumeric#value:member",
              "docComment": "/**\n * The face's current value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<string | "
                },
                {
                  "kind": "Reference",
                  "text": "DigitizedValues",
                  "canonicalReference": "flipclock!DigitizedValues:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!alphanumeric:function(1)",
          "docComment": "/**\n * Instantiate a new instnace of Alphanumeric\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function alphanumeric(props: "
            },
            {
              "kind": "Reference",
              "text": "AlphanumericProps",
              "canonicalReference": "flipclock!AlphanumericProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Alphanumeric",
              "canonicalReference": "flipclock!Alphanumeric:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "alphanumeric"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!AlphanumericProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AlphanumericProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    value: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<string | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    direction?: 'auto' | 'forwards' | 'backwards';\n    targetValue: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<string | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    sequencer?: "
            },
            {
              "kind": "Reference",
              "text": "SequencerContext",
              "canonicalReference": "flipclock!SequencerContext:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SequencerOptions",
              "canonicalReference": "flipclock!SequencerOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n    skipChars?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "AlphanumericProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Callback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Callback<P extends "
            },
            {
              "kind": "Reference",
              "text": "CallbackParams",
              "canonicalReference": "flipclock!CallbackParams:type"
            },
            {
              "kind": "Content",
              "text": "<any[]>"
            },
            {
              "kind": "Content",
              "text": ", R = "
            },
            {
              "kind": "Content",
              "text": "undefined"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(...args: P) => R"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Callback",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!CallbackParams:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CallbackParams<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends any[] ? T : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CallbackParams",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!castDigitizedGroup:function(1)",
          "docComment": "/**\n * Cast a value to a array of digitized arrays.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function castDigitizedGroup(value?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "castDigitizedGroup"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!castDigitizedString:function(1)",
          "docComment": "/**\n * Cast a value to a string.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function castDigitizedString(value?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "castDigitizedString"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!castDigitizedValues:function(1)",
          "docComment": "/**\n * Cast a value to an array of strings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function castDigitizedValues(value?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "castDigitizedValues"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Change:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Change<R> = "
            },
            {
              "kind": "Content",
              "text": "{\n    from: R;\n    to: R;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Change",
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!characterRange:function(1)",
          "docComment": "/**\n * Generates a random array of characters using the given range.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function characterRange(startChar: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", endChar: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "startChar",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "endChar",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "characterRange"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!CharsetCache:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CharsetCache = "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, string[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CharsetCache",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!CharsetContext:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CharsetContext = "
            },
            {
              "kind": "Content",
              "text": "{\n    charset: string[];\n    emptyChar: string;\n    chunk: "
            },
            {
              "kind": "Reference",
              "text": "ChunkFunction",
              "canonicalReference": "flipclock!ChunkFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    isBlacklisted: "
            },
            {
              "kind": "Reference",
              "text": "IsBlacklistFunction",
              "canonicalReference": "flipclock!IsBlacklistFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    isWhitelisted: "
            },
            {
              "kind": "Reference",
              "text": "IsWhitelistFunction",
              "canonicalReference": "flipclock!IsWhitelistFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    next: "
            },
            {
              "kind": "Reference",
              "text": "NextFunction",
              "canonicalReference": "flipclock!NextFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    prev: "
            },
            {
              "kind": "Reference",
              "text": "PrevFunction",
              "canonicalReference": "flipclock!PrevFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CharsetContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!CharsetOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CharsetOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    whitelist?: string[];\n    blacklist?: string[];\n    charset?: "
            },
            {
              "kind": "Reference",
              "text": "CreateCharset",
              "canonicalReference": "flipclock!CreateCharset:type"
            },
            {
              "kind": "Content",
              "text": ";\n    emptyChar?: string;\n    shuffle?: boolean | "
            },
            {
              "kind": "Reference",
              "text": "ShuffleFunction",
              "canonicalReference": "flipclock!ShuffleFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CharsetOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ChunkFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChunkFunction = "
            },
            {
              "kind": "Content",
              "text": "(value: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | undefined, size: number) => string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ChunkFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!classes:function(1)",
          "docComment": "/**\n * Derive the class attribute value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function classes(values?: "
            },
            {
              "kind": "Reference",
              "text": "HTMLClassAttribute",
              "canonicalReference": "flipclock!HTMLClassAttribute:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "classes"
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!Clock:class",
          "docComment": "/**\n * This face will show a clock in a given format.\n *\n * @example\n * ```html\n * <div id=\"clock\"></div>\n * ```\n *\n * ```js\n * import { FlipClock, Clock } from 'flipclock';\n *\n * const instance = new FlipClock({\n *   face: new Clock({\n *     format: 'hh:mm:ss A'\n *   })\n * });\n *\n * instance.mount(document.querySelector('#clock'));\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Clock implements "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Clock",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flipclock!Clock:constructor(1)",
              "docComment": "/**\n * Instantiate the clock face.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClockProps",
                  "canonicalReference": "flipclock!ClockProps:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Clock#date:member",
              "docComment": "/**\n * The starting date on the clock. If no date is set, the current time will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "date?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "date",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Clock#format:member",
              "docComment": "/**\n * The format string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "format: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "format",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Clock#formatter:member",
              "docComment": "/**\n * The duration formatter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formatter: "
                },
                {
                  "kind": "Reference",
                  "text": "UseDateFormats",
                  "canonicalReference": "flipclock!UseDateFormats:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "formatter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Clock#interval:member(1)",
              "docComment": "/**\n * Format the face value to the current date/time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interval(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "interval"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Clock#value:member",
              "docComment": "/**\n * The current formatted value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!clock:function(1)",
          "docComment": "/**\n * Instantiate a new instance of Clock.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function clock(props?: "
            },
            {
              "kind": "Reference",
              "text": "ClockProps",
              "canonicalReference": "flipclock!ClockProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Clock",
              "canonicalReference": "flipclock!Clock:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "clock"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ClockProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ClockProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    date?: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    format?: string;\n    formatter?: "
            },
            {
              "kind": "Reference",
              "text": "UseDateFormats",
              "canonicalReference": "flipclock!UseDateFormats:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DateFormatOptions",
              "canonicalReference": "flipclock!DateFormatOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ClockProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!compareAsc:function(1)",
          "docComment": "/**\n * Compare two dates and return a number. This method is used with sort().\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function compareAsc(left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "left",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "right",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "compareAsc"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!computed:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function computed<T>(proxy: "
            },
            {
              "kind": "Reference",
              "text": "ComputedGetterSetter",
              "canonicalReference": "flipclock!ComputedGetterSetter:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "WriteableComputedRef",
              "canonicalReference": "flipclock!WriteableComputedRef:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proxy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "computed"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!computed:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function computed<T>(fn: "
            },
            {
              "kind": "Reference",
              "text": "ComputedGetter",
              "canonicalReference": "flipclock!ComputedGetter:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ComputedRef",
              "canonicalReference": "flipclock!ComputedRef:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "computed"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ComputedGetter:type",
          "docComment": "/**\n * A computed getter.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComputedGetter<T> = "
            },
            {
              "kind": "Content",
              "text": "() => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ComputedGetter",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ComputedGetterSetter:type",
          "docComment": "/**\n * A computed getter and setter.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComputedGetterSetter<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    get(): T;\n    set(value: T): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ComputedGetterSetter",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ComputedRef:type",
          "docComment": "/**\n * A computed ref.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComputedRef<T> = "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "flipclock!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ComputedRef",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!Counter:class",
          "docComment": "/**\n * This face is designed to increment and decrement values. Usually this face is used as a counter for 0, 1, 2, 3, 4 (etc) for something like page views.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Counter implements "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Counter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flipclock!Counter:constructor(1)",
              "docComment": "/**\n * Instantiate the clock face.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "CounterProps",
                  "canonicalReference": "flipclock!CounterProps:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Counter#countdown:member",
              "docComment": "/**\n * Should the face count down instead of up.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countdown: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "countdown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Counter#decrement:member(1)",
              "docComment": "/**\n * Substract the face value by the given value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decrement(value?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "decrement"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Counter#increment:member(1)",
              "docComment": "/**\n * Add to the face value by the given value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "increment(value?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "increment"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Counter#interval:member(1)",
              "docComment": "/**\n * This method is called with every interval, or every time the clock should change, and handles the actual incrementing and decrementing the clock's `FaceValue`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interval(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "interval"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Counter#step:member",
              "docComment": "/**\n * The number to increment/decrement in the interval.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "step",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Counter#targetValue:member",
              "docComment": "/**\n * The target value determines when the counter should stop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetValue?: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "targetValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Counter#value:member",
              "docComment": "/**\n * The current face value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!counter:function(1)",
          "docComment": "/**\n * Instantiate a new Counter instance.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function counter(props: "
            },
            {
              "kind": "Reference",
              "text": "CounterProps",
              "canonicalReference": "flipclock!CounterProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Counter",
              "canonicalReference": "flipclock!Counter:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "counter"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!CounterProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CounterProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    countdown?: boolean;\n    value: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<number>;\n    sequencer?: "
            },
            {
              "kind": "Reference",
              "text": "SequencerContext",
              "canonicalReference": "flipclock!SequencerContext:type"
            },
            {
              "kind": "Content",
              "text": ";\n    step?: number;\n    targetValue?: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<number>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "SequencerOptions",
              "canonicalReference": "flipclock!SequencerOptions:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CounterProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!CreateCharset:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CreateCharset = "
            },
            {
              "kind": "Content",
              "text": "(shuffle?: boolean) => string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CreateCharset",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!createSignal:function(1)",
          "docComment": "/**\n * Create a signal.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSignal<T>(initialValue: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "flipclock!Signal:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "initialValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createSignal"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!createSignal:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSignal<T>(initialValue?: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "flipclock!Signal:type"
            },
            {
              "kind": "Content",
              "text": "<T | undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "initialValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createSignal"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DateFlagFormatter:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DateFlagFormatter = "
            },
            {
              "kind": "Content",
              "text": "(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ") => string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DateFlagFormatter",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DateFormatOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DateFormatOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    translate?: "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": ";\n    formats?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "DateFlagFormatter",
              "canonicalReference": "flipclock!DateFlagFormatter:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DateFormatOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DateFormatter:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DateFormatter = "
            },
            {
              "kind": "Content",
              "text": "(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", format: string) => string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DateFormatter",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DateMapDefinition:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DateMapDefinition = "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "DateFlagFormatter",
              "canonicalReference": "flipclock!DateFlagFormatter:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DateMapDefinition",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!dayAbbreviations:var",
          "docComment": "/**\n * The abbreviated names of the days in English.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "dayAbbreviations: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "dayAbbreviations",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!days:var",
          "docComment": "/**\n * The proper names of the days in English.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "days: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "days",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!daysInWeek:var",
          "docComment": "/**\n * The number of days in a week.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "daysInWeek: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "daysInWeek",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!debounce:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function debounce(fn: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": ", ms?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(this: any, ...args: any[]) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "ms",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "debounce"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DecrementFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DecrementFunction = "
            },
            {
              "kind": "Content",
              "text": "(current: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<any>, target: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<any>, count?: number, backwards?: boolean) => "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DecrementFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!defaultCharset:function(1)",
          "docComment": "/**\n * Get the default character set.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defaultCharset(): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "defaultCharset"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DefineFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DefineFunction<V> = "
            },
            {
              "kind": "Content",
              "text": "(key: string | "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, V>, value?: V) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DefineFunction",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DefinitionTerms:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DefinitionTerms = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DefinitionTerms",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DictionaryMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DictionaryMap = "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, string | "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DictionaryMap",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DictionaryRecord:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DictionaryRecord = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DictionaryRecord",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInCalendarMonths:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in calendar years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInCalendarMonths(left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "left",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "right",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInCalendarMonths"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInCalendarYears:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in calendar years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInCalendarYears(left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "left",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "right",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInCalendarYears"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInDays:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInDays(left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "left",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "right",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInDays"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInHours:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInHours(left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "left",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "right",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInHours"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInMilliseconds:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInMilliseconds(dirtyLeft: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", dirtyRight: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dirtyLeft",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dirtyRight",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInMilliseconds"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInMinutes:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInMinutes(left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "left",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "right",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInMinutes"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInMonths:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in months.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInMonths(dirtyLeft: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", dirtyRight: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dirtyLeft",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dirtyRight",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInMonths"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInSeconds:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInSeconds(left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "left",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "right",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInSeconds"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInWeeks:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in weeks.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInWeeks(dirtyLeft: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", dirtyRight: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dirtyLeft",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dirtyRight",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInWeeks"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!differenceInYears:function(1)",
          "docComment": "/**\n * Calculates the difference between two given dates in years.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function differenceInYears(dirtyLeft: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", dirtyRight: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dirtyLeft",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dirtyRight",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "differenceInYears"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DigitizedValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DigitizedValue = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DigitizedValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DigitizedValues:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DigitizedValues = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ")[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DigitizedValues",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DigitizeFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DigitizeFunction = "
            },
            {
              "kind": "Content",
              "text": "(value: any) => "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DigitizeFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DigitizerContext:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DigitizerContext = "
            },
            {
              "kind": "Content",
              "text": "{\n    digitize: "
            },
            {
              "kind": "Reference",
              "text": "DigitizeFunction",
              "canonicalReference": "flipclock!DigitizeFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    undigitize: "
            },
            {
              "kind": "Reference",
              "text": "UndigitizeFunction",
              "canonicalReference": "flipclock!UndigitizeFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    isDigitized: "
            },
            {
              "kind": "Reference",
              "text": "IsDigitizedFunction",
              "canonicalReference": "flipclock!IsDigitizedFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DigitizerContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Duration:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Duration = "
            },
            {
              "kind": "Content",
              "text": "{\n    years?: number;\n    months?: number;\n    weeks?: number;\n    days?: number;\n    hours?: number;\n    minutes?: number;\n    seconds?: number;\n    milliseconds?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Duration",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DurationFlagFormats:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DurationFlagFormats = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "DurationFlagFormatter",
              "canonicalReference": "flipclock!DurationFlagFormatter:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DurationFlagFormats",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DurationFlagFormatter:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DurationFlagFormatter = "
            },
            {
              "kind": "Content",
              "text": "(duration: "
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "flipclock!Duration:type"
            },
            {
              "kind": "Content",
              "text": ", length: number) => string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DurationFlagFormatter",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DurationFormatOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DurationFormatOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    translate?: "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": ";\n    formats?: "
            },
            {
              "kind": "Reference",
              "text": "DurationFlagFormats",
              "canonicalReference": "flipclock!DurationFlagFormats:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DurationFormatOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DurationFormatter:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DurationFormatter = "
            },
            {
              "kind": "Content",
              "text": "(date: "
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "flipclock!Duration:type"
            },
            {
              "kind": "Content",
              "text": ", format: string) => string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DurationFormatter",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!DurationMapDefinition:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DurationMapDefinition = "
            },
            {
              "kind": "Content",
              "text": "[keyof "
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "flipclock!Duration:type"
            },
            {
              "kind": "Content",
              "text": " | (keyof "
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "flipclock!Duration:type"
            },
            {
              "kind": "Content",
              "text": ")[], "
            },
            {
              "kind": "Reference",
              "text": "DurationFlagFormatter",
              "canonicalReference": "flipclock!DurationFlagFormatter:type"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "DurationMapDefinition",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!el:function(1)",
          "docComment": "/**\n * Create a document element.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function el<T extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "HTMLElementTagNameMap",
              "canonicalReference": "!HTMLElementTagNameMap:interface"
            },
            {
              "kind": "Content",
              "text": ">(options: "
            },
            {
              "kind": "Reference",
              "text": "ElementOptions",
              "canonicalReference": "flipclock!ElementOptions:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElementTagNameMap",
              "canonicalReference": "!HTMLElementTagNameMap:interface"
            },
            {
              "kind": "Content",
              "text": "[T]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "el"
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!ElapsedTime:class",
          "docComment": "/**\n * This face will show the amount of time elapsed since the given value and display it a specific format. For example 'hh:mm:ss' will show the elapsed time in hours, minutes, seconds.\n *\n * @example\n * ```html\n * <div id=\"clock\"></div>\n * ```\n *\n * ```js\n * const instance = new FlipClock({\n *   face: new ElapsedTime({\n *      format: 'hh:mm:ss'\n *   })\n * });\n *\n * instance.mount(document.querySelector('#clock'));\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ElapsedTime implements "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ElapsedTime",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flipclock!ElapsedTime:constructor(1)",
              "docComment": "/**\n * Instantiate a Clock face with a given value and attributes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElapsedTimeProps",
                  "canonicalReference": "flipclock!ElapsedTimeProps:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!ElapsedTime#end:member",
              "docComment": "/**\n * The ending date used to calculate the elsapsed time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!ElapsedTime#format:member",
              "docComment": "/**\n * The format string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "format: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "format",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!ElapsedTime#formatter:member",
              "docComment": "/**\n * The duration formatter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formatter: "
                },
                {
                  "kind": "Reference",
                  "text": "UseDurationFormats",
                  "canonicalReference": "flipclock!UseDurationFormats:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "formatter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!ElapsedTime#interval:member(1)",
              "docComment": "/**\n * Format the value with the new elapsed time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interval(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "interval"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!ElapsedTime#span:member",
              "docComment": "/**\n * Get the start and end date.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get span(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        start: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        end: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "span",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!ElapsedTime#start:member",
              "docComment": "/**\n * The starting date used to calculate the elsapsed time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!ElapsedTime#value:member",
              "docComment": "/**\n * The current face value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!elapsedTime:function(1)",
          "docComment": "/**\n * Instantiate a new ElapsedTime instance.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function elapsedTime(props: "
            },
            {
              "kind": "Reference",
              "text": "ElapsedTimeProps",
              "canonicalReference": "flipclock!ElapsedTimeProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ElapsedTime",
              "canonicalReference": "flipclock!ElapsedTime:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "elapsedTime"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ElapsedTimeProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ElapsedTimeProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    end?: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    format: string;\n    formatter?: "
            },
            {
              "kind": "Reference",
              "text": "UseDurationFormats",
              "canonicalReference": "flipclock!UseDurationFormats:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DurationFormatOptions",
              "canonicalReference": "flipclock!DurationFormatOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n    start?: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ElapsedTimeProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ElementChildElement:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ElementChildElement = "
            },
            {
              "kind": "Reference",
              "text": "ChildNode",
              "canonicalReference": "!ChildNode:interface"
            },
            {
              "kind": "Content",
              "text": " | string | undefined | null | false"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ElementChildElement",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ElementChildren:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ElementChildren = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "ElementChildElement",
              "canonicalReference": "flipclock!ElementChildElement:type"
            },
            {
              "kind": "Content",
              "text": ")[] | ((el: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "ElementChildElement",
              "canonicalReference": "flipclock!ElementChildElement:type"
            },
            {
              "kind": "Content",
              "text": "[])"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ElementChildren",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ElementOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ElementOptions<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    tagName: T;\n    el?: "
            },
            {
              "kind": "Reference",
              "text": "ChildNode",
              "canonicalReference": "!ChildNode:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null;\n    class?: "
            },
            {
              "kind": "Reference",
              "text": "HTMLClassAttribute",
              "canonicalReference": "flipclock!HTMLClassAttribute:type"
            },
            {
              "kind": "Content",
              "text": ";\n    style?: "
            },
            {
              "kind": "Reference",
              "text": "HTMLStyleAttribute",
              "canonicalReference": "flipclock!HTMLStyleAttribute:type"
            },
            {
              "kind": "Content",
              "text": ";\n    attrs?: "
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "flipclock!HTMLAttributes:type"
            },
            {
              "kind": "Content",
              "text": ";\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "ElementChildren",
              "canonicalReference": "flipclock!ElementChildren:type"
            },
            {
              "kind": "Content",
              "text": ";\n    events?: {\n        [K in keyof "
            },
            {
              "kind": "Reference",
              "text": "GlobalEventHandlers",
              "canonicalReference": "!GlobalEventHandlers:interface"
            },
            {
              "kind": "Content",
              "text": "]?: "
            },
            {
              "kind": "Reference",
              "text": "GlobalEventHandlers",
              "canonicalReference": "!GlobalEventHandlers:interface"
            },
            {
              "kind": "Content",
              "text": "[K];\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ElementOptions",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!EMPTY_CHAR:var",
          "docComment": "/**\n * The default empty character for digitization.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EMPTY_CHAR = "
            },
            {
              "kind": "Content",
              "text": "\" \""
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EMPTY_CHAR",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!endOfDay:function(1)",
          "docComment": "/**\n * Set the date to the end of the relative day.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function endOfDay(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "date",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "endOfDay"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!endOfMonth:function(1)",
          "docComment": "/**\n * Set the date to the end of the relative month.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function endOfMonth(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "date",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "endOfMonth"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Event_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare type Event_2<T, K extends "
            },
            {
              "kind": "Content",
              "text": "keyof T"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: keyof T;\n    fn: "
            },
            {
              "kind": "Reference",
              "text": "EventEmitterCallback",
              "canonicalReference": "flipclock!EventEmitterCallback:type"
            },
            {
              "kind": "Content",
              "text": "<T, K>;\n    unwatch: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Event_2",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!EventEmitter:class",
          "docComment": "/**\n * An event emitter to facilitate emitter and listening for events.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EventEmitter<T> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "EventEmitter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "flipclock!EventEmitter#emit:member(1)",
              "docComment": "/**\n * Emit an event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emit<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>[K] extends (...args: infer P) => void ? P : any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "emit"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!EventEmitter#events:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected events: "
                },
                {
                  "kind": "Reference",
                  "text": "Event_2",
                  "canonicalReference": "flipclock!Event_2:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, any>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "events",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!EventEmitter#off:member(1)",
              "docComment": "/**\n * Stop listening for an event by key, or with a key a specific function.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "off<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "off"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!EventEmitter#on:member(1)",
              "docComment": "/**\n * Listen for an event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", fn: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitterCallback",
                  "canonicalReference": "flipclock!EventEmitterCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, K>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "on"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!EventEmitter#once:member(1)",
              "docComment": "/**\n * Listen for an event once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "once<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", fn: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitterCallback",
                  "canonicalReference": "flipclock!EventEmitterCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, K>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "once"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!EventEmitter#unwatch:member(1)",
              "docComment": "/**\n * Unwatch and remove all the events.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unwatch(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "unwatch"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!EventEmitterCallback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EventEmitterCallback<T, K extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(...args: "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<T>[K][]) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "EventEmitterCallback",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "flipclock!Face:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Face<T extends "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "FaceHooks",
              "canonicalReference": "flipclock!FaceHooks:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "Face",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "flipclock!Face#interval:member(1)",
              "docComment": "/**\n * This method is called with every timer interval. The purpose of method is to return a new value. Each time the value changes, the clock is be re-rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interval(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "interval"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!Face#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "flipclock!FaceHooks:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface FaceHooks<T extends "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "FaceHooks",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#afterCreate:member",
              "docComment": "/**\n * The `afterCreate` hook.\n *\n * After the clock has been created.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "afterCreate?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "afterCreate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#afterInterval:member",
              "docComment": "/**\n * The `afterInterval` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "afterInterval?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "afterInterval",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#afterMount:member",
              "docComment": "/**\n * The `afterMount` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "afterMount?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "afterMount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#afterStart:member",
              "docComment": "/**\n * The `afterStart` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "afterStart?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "afterStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#afterStop:member",
              "docComment": "/**\n * The `afterStop` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "afterStop?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "afterStop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#afterUnmount:member",
              "docComment": "/**\n * The `afterUnmount` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "afterUnmount?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "afterUnmount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#beforeInterval:member",
              "docComment": "/**\n * The `beforeInterval` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beforeInterval?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "beforeInterval",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#beforeMount:member",
              "docComment": "/**\n * The `beforeMount` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beforeMount?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "beforeMount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#beforeStart:member",
              "docComment": "/**\n * The `beforeStart` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beforeStart?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "beforeStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#beforeStop:member",
              "docComment": "/**\n * The `beforeStop` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beforeStop?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "beforeStop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flipclock!FaceHooks#beforeUnmount:member",
              "docComment": "/**\n * The `beforeUnmount` hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beforeUnmount?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "beforeUnmount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!FaceValue:class",
          "docComment": "/**\n * The FaceValue class digitizes the raw value and so it can be used by the clock face.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FaceValue<T> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "FaceValue",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flipclock!FaceValue:constructor(1)",
              "docComment": "/**\n * Instantiate the face value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValueProps",
                  "canonicalReference": "flipclock!FaceValueProps:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#$carryLength:member",
              "docComment": "/**\n * The carry length is carry over when the instance it copied. The minimum number of digits could be 5. But say the string had 7 digits, the minimum required would still be maintained, but the carry can take priority to ensure no face value ever shrinks in the total number of digits.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected $carryLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$carryLength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#$value:member",
              "docComment": "/**\n * The reactive value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected $value: "
                },
                {
                  "kind": "Reference",
                  "text": "Ref",
                  "canonicalReference": "flipclock!Ref:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#carryLength:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get carryLength(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "carryLength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FaceValue#compare:member(1)",
              "docComment": "/**\n * Compare the face value with the given subject.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(subject: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subject",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "compare"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FaceValue#copy:member(1)",
              "docComment": "/**\n * Create a new instance with the given value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copy(value?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValueProps",
                  "canonicalReference": "flipclock!FaceValueProps:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FaceValue",
                  "canonicalReference": "flipclock!FaceValue:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "copy"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#digitizer:member",
              "docComment": "/**\n * Parameters that are passed to the digiter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly digitizer: "
                },
                {
                  "kind": "Reference",
                  "text": "DigitizerContext",
                  "canonicalReference": "flipclock!DigitizerContext:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "digitizer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#digits:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get digits(): "
                },
                {
                  "kind": "Reference",
                  "text": "DigitizedValues",
                  "canonicalReference": "flipclock!DigitizedValues:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset digits(value: "
                },
                {
                  "kind": "Reference",
                  "text": "DigitizedValues",
                  "canonicalReference": "flipclock!DigitizedValues:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "digits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get length(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#minimumLength:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get minimumLength(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minimumLength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FaceValue#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get value(): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset value(value: T);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!faceValue:function(1)",
          "docComment": "/**\n * Helper function to create a new FaceValue instance.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function faceValue<T>(value: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "faceValue"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!FaceValueProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FaceValueProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    digitizer?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizerContext",
              "canonicalReference": "flipclock!DigitizerContext:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FaceValueProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!fisherYatesShuffle:function(1)",
          "docComment": "/**\n * Shuffles array in place.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fisherYatesShuffle(chars: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "chars",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "fisherYatesShuffle"
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!FlipClock:class",
          "docComment": "/**\n * The FlipClock class starts, stops, resets, mounts, and unmounts the clock. The clock also tracks the time and renders the clock with each interval.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FlipClock<T extends "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "FlipClock",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flipclock!FlipClock:constructor(1)",
              "docComment": "/**\n * Construct the FlipClock.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClockProps",
                  "canonicalReference": "flipclock!FlipClockProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FlipClock#animationRate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get animationRate(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "animationRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FlipClock#autoStart:member",
              "docComment": "/**\n * Determines if the clock should automatically start when it is mounted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly autoStart: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "autoStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FlipClock#el:member",
              "docComment": "/**\n * The element the count is mounted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "el?: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "el",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FlipClock#emitter:member",
              "docComment": "/**\n * The event emitter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly emitter: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "flipclock!EventEmitter:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FaceHooks",
                  "canonicalReference": "flipclock!FaceHooks:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "emitter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FlipClock#face:member",
              "docComment": "/**\n * The face used to display the clock.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly face: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "face",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FlipClock#hook:member(1)",
              "docComment": "/**\n * Dispatch the event and call the method that corresponds to given hook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected hook<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FaceHooks",
                  "canonicalReference": "flipclock!FaceHooks:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FaceHooks",
                  "canonicalReference": "flipclock!FaceHooks:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>>[K] extends (...args: infer P) => void ? P : any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hook"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FlipClock#mount:member(1)",
              "docComment": "/**\n * Mount the clock instance to the DOM.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mount(el: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "el",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mount"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FlipClock#start:member(1)",
              "docComment": "/**\n * Start the clock instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(fn?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "start"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FlipClock#stop:member(1)",
              "docComment": "/**\n * Stop the clock instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stop(fn?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stop"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FlipClock#theme:member",
              "docComment": "/**\n * The face used to display the clock.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly theme: "
                },
                {
                  "kind": "Reference",
                  "text": "Theme",
                  "canonicalReference": "flipclock!Theme:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!FlipClock#timer:member",
              "docComment": "/**\n * The face value displayed on the clock.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly timer: "
                },
                {
                  "kind": "Reference",
                  "text": "Timer",
                  "canonicalReference": "flipclock!Timer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FlipClock#toggle:member(1)",
              "docComment": "/**\n * Toggle starting/stopping the clock instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggle(fn?: "
                },
                {
                  "kind": "Content",
                  "text": "(instance: "
                },
                {
                  "kind": "Reference",
                  "text": "FlipClock",
                  "canonicalReference": "flipclock!FlipClock:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toggle"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!FlipClock#unmount:member(1)",
              "docComment": "/**\n * Unmount the clock instance from the DOM.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unmount(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "unmount"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!flipClock:function(1)",
          "docComment": "/**\n * Instantiate a new FlipClock instance.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function flipClock<T extends "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ">(props: "
            },
            {
              "kind": "Reference",
              "text": "FlipClockProps",
              "canonicalReference": "flipclock!FlipClockProps:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "FlipClock",
              "canonicalReference": "flipclock!FlipClock:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "flipClock"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!FlipClockProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FlipClockProps<T extends "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    autoStart?: boolean;\n    emitter?: "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "flipclock!EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FaceHooks",
              "canonicalReference": "flipclock!FaceHooks:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>;\n    face: T;\n    theme?: "
            },
            {
              "kind": "Reference",
              "text": "Theme",
              "canonicalReference": "flipclock!Theme:type"
            },
            {
              "kind": "Content",
              "text": "<T>;\n    timer?: "
            },
            {
              "kind": "Reference",
              "text": "Timer",
              "canonicalReference": "flipclock!Timer:class"
            },
            {
              "kind": "Content",
              "text": " | number;\n    el?: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FlipClockProps",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 15
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!getTwelveHourFormat:function(1)",
          "docComment": "/**\n * Get the twelve hour format of the current date.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getTwelveHourFormat(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "date",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getTwelveHourFormat"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!HTMLAttributes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HTMLAttributes = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "HTMLAttributes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!HTMLClassAttribute:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HTMLClassAttribute = "
            },
            {
              "kind": "Content",
              "text": "string | string[] | "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, boolean | undefined | null>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "HTMLClassAttribute",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!HTMLStyleAttribute:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HTMLStyleAttribute = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in keyof "
            },
            {
              "kind": "Reference",
              "text": "CSSStyleDeclaration",
              "canonicalReference": "!CSSStyleDeclaration:interface"
            },
            {
              "kind": "Content",
              "text": "]?: string;\n} | string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "HTMLStyleAttribute",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!IncrementFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IncrementFunction = "
            },
            {
              "kind": "Content",
              "text": "(current: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<any>, target: "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<any>, count?: number, backwards?: boolean) => "
            },
            {
              "kind": "Reference",
              "text": "FaceValue",
              "canonicalReference": "flipclock!FaceValue:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "IncrementFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!IsBlacklistFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IsBlacklistFunction = "
            },
            {
              "kind": "Content",
              "text": "(value: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": ") => boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "IsBlacklistFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!IsDigitizedFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IsDigitizedFunction = "
            },
            {
              "kind": "Content",
              "text": "(value: any) => boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "IsDigitizedFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!isDigitizedGroup:function(1)",
          "docComment": "/**\n * Determines if the value is a digitized group, which is an array of digitized values.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isDigitizedGroup(value: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "isDigitizedGroup"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!isDigitizedValues:function(1)",
          "docComment": "/**\n * Determines if the value is an array of digitized strings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isDigitizedValues(value: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "isDigitizedValues"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!isLastDayOfMonth:function(1)",
          "docComment": "/**\n * Determines if the given date is the last day of the month.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isLastDayOfMonth(dirtyDate: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dirtyDate",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isLastDayOfMonth"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!IsWhitelistFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IsWhitelistFunction = "
            },
            {
              "kind": "Content",
              "text": "(value: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": ") => boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "IsWhitelistFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!matchArrayStructure:function(1)",
          "docComment": "/**\n * Match the structure of the current value to the target.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function matchArrayStructure(current: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ", target: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ", fn?: "
            },
            {
              "kind": "Reference",
              "text": "MatchArrayStructureCallback",
              "canonicalReference": "flipclock!MatchArrayStructureCallback:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "current",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "matchArrayStructure"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!matchArrayStructure:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function matchArrayStructure(current: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ", target: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ", options: "
            },
            {
              "kind": "Reference",
              "text": "MatchArrayStructureOptions",
              "canonicalReference": "flipclock!MatchArrayStructureOptions:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ", fn?: "
            },
            {
              "kind": "Reference",
              "text": "MatchArrayStructureCallback",
              "canonicalReference": "flipclock!MatchArrayStructureCallback:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "current",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "matchArrayStructure"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!MatchArrayStructureCallback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MatchArrayStructureCallback = "
            },
            {
              "kind": "Reference",
              "text": "Callback",
              "canonicalReference": "flipclock!Callback:type"
            },
            {
              "kind": "Content",
              "text": "<[value?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": ", target?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": "], "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "MatchArrayStructureCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!MatchArrayStructureOptions:type",
          "docComment": "/**\n * This method will match the structure of the current array against the target. This method will not match the length of the DigitizedValue[] arrays, but match lengths for groups. To ensure all structures have the same length, run matchStructureLength() after this method.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MatchArrayStructureOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    backwards?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "MatchArrayStructureOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!millisecondsInDay:var",
          "docComment": "/**\n * The number of milliseconds in 1 day.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "millisecondsInDay: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "millisecondsInDay",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!millisecondsInHour:var",
          "docComment": "/**\n * The number of milliseconds in 1 hour\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "millisecondsInHour: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "millisecondsInHour",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!millisecondsInMinute:var",
          "docComment": "/**\n * The number of milliseconds in 1 minute\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "millisecondsInMinute: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "millisecondsInMinute",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!monthAbbreviations:var",
          "docComment": "/**\n * The abbreviated names of the months in English.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "monthAbbreviations: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "monthAbbreviations",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "flipclock!months:var",
          "docComment": "/**\n * The proper names of the months in English.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "months: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "months",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!NextFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NextFunction = "
            },
            {
              "kind": "Content",
              "text": "(value?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": ", target?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ", count?: number) => "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "NextFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!pad:function(1)",
          "docComment": "/**\n * Left pad another value with zero if its less then the given length.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pad(value: "
            },
            {
              "kind": "Content",
              "text": "string | number | undefined"
            },
            {
              "kind": "Content",
              "text": ", length: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "length",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "pad"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!PadFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PadFunction = "
            },
            {
              "kind": "Content",
              "text": "(value: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ", minimumDigits: number) => "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PadFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!PrevFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PrevFunction = "
            },
            {
              "kind": "Content",
              "text": "(value?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": ", target?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ", count?: number) => "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PrevFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!range:function(1)",
          "docComment": "/**\n * Get a range of numbers using the given size and starting point.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function range(startAt: "
            },
            {
              "kind": "Content",
              "text": "number | undefined"
            },
            {
              "kind": "Content",
              "text": ", size: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "startAt",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "size",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "range"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!ref:function(1)",
          "docComment": "/**\n * Create a ref.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ref<T>(value: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "flipclock!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ref"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!ref:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ref<T>(value?: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "flipclock!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<T | undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ref"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Ref:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Ref<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    value: T;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Ref",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!SequencerContext:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SequencerContext = "
            },
            {
              "kind": "Content",
              "text": "{\n    charset: string[];\n    decrement: "
            },
            {
              "kind": "Reference",
              "text": "DecrementFunction",
              "canonicalReference": "flipclock!DecrementFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    increment: "
            },
            {
              "kind": "Reference",
              "text": "IncrementFunction",
              "canonicalReference": "flipclock!IncrementFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "SequencerContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!SequencerOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SequencerOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    charset?: "
            },
            {
              "kind": "Reference",
              "text": "CharsetContext",
              "canonicalReference": "flipclock!CharsetContext:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CharsetOptions",
              "canonicalReference": "flipclock!CharsetOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n    matchArray?: "
            },
            {
              "kind": "Reference",
              "text": "MatchArrayStructureOptions",
              "canonicalReference": "flipclock!MatchArrayStructureOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n    stopWhen?: "
            },
            {
              "kind": "Reference",
              "text": "StopPredicateFunction",
              "canonicalReference": "flipclock!StopPredicateFunction:type"
            },
            {
              "kind": "Content",
              "text": "<[current?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": ", target?: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValue",
              "canonicalReference": "flipclock!DigitizedValue:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": "]>;\n    stopAfterChanges?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "SequencerOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!ShuffleFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ShuffleFunction = "
            },
            {
              "kind": "Content",
              "text": "(chars: string[]) => string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ShuffleFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Signal:type",
          "docComment": "/**\n * The tuple that is returned when creating a signal.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Signal<T> = "
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "SignalReadFunction",
              "canonicalReference": "flipclock!SignalReadFunction:type"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "SignalWriteFunction",
              "canonicalReference": "flipclock!SignalWriteFunction:type"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "SignalResetFunction",
              "canonicalReference": "flipclock!SignalResetFunction:type"
            },
            {
              "kind": "Content",
              "text": "<T>]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Signal",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!SignalReadFunction:type",
          "docComment": "/**\n * The signal's read function.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SignalReadFunction<T> = "
            },
            {
              "kind": "Content",
              "text": "() => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "SignalReadFunction",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!SignalResetFunction:type",
          "docComment": "/**\n * The signal's reset function.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SignalResetFunction<T> = "
            },
            {
              "kind": "Content",
              "text": "() => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "SignalResetFunction",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!SignalWriteFunction:type",
          "docComment": "/**\n * The signal's write function.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SignalWriteFunction<T> = "
            },
            {
              "kind": "Content",
              "text": "(value: T) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "SignalWriteFunction",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!sort:function(1)",
          "docComment": "/**\n * So an array based on the index position of another.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function sort(map: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "map",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "sort"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!stop_2:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function stop_2(): "
            },
            {
              "kind": "Reference",
              "text": "Stop",
              "canonicalReference": "flipclock!Stop:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "stop_2"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Stop:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Stop = "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    stop: true;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Stop",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!stopAfterChanges:function(1)",
          "docComment": "/**\n * Stop the walker after X number of changes.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function stopAfterChanges<P extends "
            },
            {
              "kind": "Reference",
              "text": "CallbackParams",
              "canonicalReference": "flipclock!CallbackParams:type"
            },
            {
              "kind": "Content",
              "text": "<any[]>"
            },
            {
              "kind": "Content",
              "text": ", R>(totalChanges: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", fn: "
            },
            {
              "kind": "Reference",
              "text": "Callback",
              "canonicalReference": "flipclock!Callback:type"
            },
            {
              "kind": "Content",
              "text": "<P, R>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Callback",
              "canonicalReference": "flipclock!Callback:type"
            },
            {
              "kind": "Content",
              "text": "<P, R>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "totalChanges",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "stopAfterChanges"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!StopPredicateFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StopPredicateFunction<P extends "
            },
            {
              "kind": "Reference",
              "text": "CallbackParams",
              "canonicalReference": "flipclock!CallbackParams:type"
            },
            {
              "kind": "Content",
              "text": "<any[]>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TrackChangesCallback",
              "canonicalReference": "flipclock!TrackChangesCallback:type"
            },
            {
              "kind": "Content",
              "text": "<P, boolean>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "StopPredicateFunction",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!stopWhen:function(1)",
          "docComment": "/**\n * Stop the walker using a predicate function. Return `false` to stop and `true` to continue. The predicate is ran before the callback function.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function stopWhen<P extends "
            },
            {
              "kind": "Reference",
              "text": "CallbackParams",
              "canonicalReference": "flipclock!CallbackParams:type"
            },
            {
              "kind": "Content",
              "text": "<any[]>"
            },
            {
              "kind": "Content",
              "text": ", R>(predicate: "
            },
            {
              "kind": "Reference",
              "text": "StopPredicateFunction",
              "canonicalReference": "flipclock!StopPredicateFunction:type"
            },
            {
              "kind": "Content",
              "text": "<P>"
            },
            {
              "kind": "Content",
              "text": ", fn: "
            },
            {
              "kind": "Reference",
              "text": "Callback",
              "canonicalReference": "flipclock!Callback:type"
            },
            {
              "kind": "Content",
              "text": "<P, R>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Callback",
              "canonicalReference": "flipclock!Callback:type"
            },
            {
              "kind": "Content",
              "text": "<P, R>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "predicate",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "stopWhen"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!style:function(1)",
          "docComment": "/**\n * Derive the style attribute value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function style(value: "
            },
            {
              "kind": "Reference",
              "text": "HTMLStyleAttribute",
              "canonicalReference": "flipclock!HTMLStyleAttribute:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "style"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!theme:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function theme(options?: "
            },
            {
              "kind": "Reference",
              "text": "FlipClockThemeOptions",
              "canonicalReference": "flipclock!~FlipClockThemeOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    render: (instance: "
            },
            {
              "kind": "Reference",
              "text": "FlipClock",
              "canonicalReference": "flipclock!FlipClock:class"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "theme"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Theme:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Theme<T extends "
            },
            {
              "kind": "Reference",
              "text": "Face",
              "canonicalReference": "flipclock!Face:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    render: (instance: "
            },
            {
              "kind": "Reference",
              "text": "FlipClock",
              "canonicalReference": "flipclock!FlipClock:class"
            },
            {
              "kind": "Content",
              "text": "<T>) => void;\n} & "
            },
            {
              "kind": "Reference",
              "text": "FaceHooks",
              "canonicalReference": "flipclock!FaceHooks:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Theme",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 9
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "flipclock!Timer:class",
          "docComment": "/**\n * The Timer class uses a requestAnimationFrame loop to build a timer that can start and stop.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Timer "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Timer",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flipclock!Timer:constructor(1)",
              "docComment": "/**\n * Create a new `Timer` instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(interval?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "interval",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#$count:member",
              "docComment": "/**\n * The count increments with each interval.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected $count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#$handle:member",
              "docComment": "/**\n * The requestAnimationFrame handle number.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected $handle?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$handle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#$lastLoop:member",
              "docComment": "/**\n * The timestamp of the last loop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected $lastLoop?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$lastLoop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#$startDate:member",
              "docComment": "/**\n * The date the timer starts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected $startDate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$startDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#count:member",
              "docComment": "/**\n * Get the number of times the timer has ticked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get count(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#elapsed:member",
              "docComment": "/**\n * The `elapsed` attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get elapsed(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "elapsed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#elapsedSinceLastLoop:member",
              "docComment": "/**\n * The `elapsedSinceLastLoop` attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get elapsedSinceLastLoop(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "elapsedSinceLastLoop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#interval:member",
              "docComment": "/**\n * The number of milliseconds that define an interval.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly interval: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "interval",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#isRunning:member",
              "docComment": "/**\n * Determines if the Timer is currently running.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isRunning(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isRunning",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#isStopped:member",
              "docComment": "/**\n * Determines if the Timer is currently stopped.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isStopped(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isStopped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#lastLoop:member",
              "docComment": "/**\n * Get the last timestamp the timer looped.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get lastLoop(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastLoop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Timer#reset:member(1)",
              "docComment": "/**\n * Resets the timer. If a callback is provided, re-start the clock.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reset(fn?: "
                },
                {
                  "kind": "Content",
                  "text": "(timer: "
                },
                {
                  "kind": "Reference",
                  "text": "Timer",
                  "canonicalReference": "flipclock!Timer:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Timer",
                  "canonicalReference": "flipclock!Timer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reset"
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Timer#start:member(1)",
              "docComment": "/**\n * Starts the timer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(fn?: "
                },
                {
                  "kind": "Content",
                  "text": "(timer: "
                },
                {
                  "kind": "Reference",
                  "text": "Timer",
                  "canonicalReference": "flipclock!Timer:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Timer",
                  "canonicalReference": "flipclock!Timer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "start"
            },
            {
              "kind": "Property",
              "canonicalReference": "flipclock!Timer#started:member",
              "docComment": "/**\n * Get the date object when the timer started.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get started(): "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "started",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "flipclock!Timer#stop:member(1)",
              "docComment": "/**\n * Stops the timer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stop(fn?: "
                },
                {
                  "kind": "Content",
                  "text": "(timer: "
                },
                {
                  "kind": "Reference",
                  "text": "Timer",
                  "canonicalReference": "flipclock!Timer:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Timer",
                  "canonicalReference": "flipclock!Timer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stop"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!timer:function(1)",
          "docComment": "/**\n * Instantiate a new `Timer` instance.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function timer(interval?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Timer",
              "canonicalReference": "flipclock!Timer:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "interval",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "timer"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!trackChanges:function(1)",
          "docComment": "/**\n * Create a callback with the values that can be tracked.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function trackChanges<P extends "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ", R>(fn: "
            },
            {
              "kind": "Reference",
              "text": "TrackChangesCallback",
              "canonicalReference": "flipclock!TrackChangesCallback:type"
            },
            {
              "kind": "Content",
              "text": "<P, R>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Callback",
              "canonicalReference": "flipclock!Callback:type"
            },
            {
              "kind": "Content",
              "text": "<P, R>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "trackChanges"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!TrackChangesCallback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TrackChangesCallback<P extends "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ", R, C = "
            },
            {
              "kind": "Content",
              "text": "P[0] | undefined"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(changes: "
            },
            {
              "kind": "Reference",
              "text": "Change",
              "canonicalReference": "flipclock!Change:type"
            },
            {
              "kind": "Content",
              "text": "<C>[], ...args: P) => R | "
            },
            {
              "kind": "Reference",
              "text": "Stop",
              "canonicalReference": "flipclock!Stop:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TrackChangesCallback",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!Translator:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Translator = "
            },
            {
              "kind": "Content",
              "text": "(value: string) => string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Translator",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!UndigitizeFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UndigitizeFunction = "
            },
            {
              "kind": "Content",
              "text": "(value: "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ") => string | "
            },
            {
              "kind": "Reference",
              "text": "DigitizedValues",
              "canonicalReference": "flipclock!DigitizedValues:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "UndigitizeFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!UnsetFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UnsetFunction = "
            },
            {
              "kind": "Content",
              "text": "(key: string | string[]) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "UnsetFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!useCharset:function(1)",
          "docComment": "/**\n * Use a character set to define what characters show up in the sequence.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCharset(options?: "
            },
            {
              "kind": "Reference",
              "text": "CharsetOptions",
              "canonicalReference": "flipclock!CharsetOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "CharsetContext",
              "canonicalReference": "flipclock!CharsetContext:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useCharset"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!useDateFormats:function(1)",
          "docComment": "/**\n * Create a new date string formatter.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDateFormats(options?: "
            },
            {
              "kind": "Reference",
              "text": "DateFormatOptions",
              "canonicalReference": "flipclock!DateFormatOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseDateFormats",
              "canonicalReference": "flipclock!UseDateFormats:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useDateFormats"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!UseDateFormats:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UseDateFormats = "
            },
            {
              "kind": "Content",
              "text": "{\n    map: "
            },
            {
              "kind": "Reference",
              "text": "DateMapDefinition",
              "canonicalReference": "flipclock!DateMapDefinition:type"
            },
            {
              "kind": "Content",
              "text": ";\n    define: "
            },
            {
              "kind": "Reference",
              "text": "DefineFunction",
              "canonicalReference": "flipclock!DefineFunction:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DateFlagFormatter",
              "canonicalReference": "flipclock!DateFlagFormatter:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    format: "
            },
            {
              "kind": "Reference",
              "text": "DateFormatter",
              "canonicalReference": "flipclock!DateFormatter:type"
            },
            {
              "kind": "Content",
              "text": ";\n    unset: "
            },
            {
              "kind": "Reference",
              "text": "UnsetFunction",
              "canonicalReference": "flipclock!UnsetFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "UseDateFormats",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!useDefinitionMap:function(1)",
          "docComment": "/**\n * A definition map is a reusable interface to create key/value pairs.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDefinitionMap<V>(items: "
            },
            {
              "kind": "Content",
              "text": "[string, V][]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseDefinitionMap",
              "canonicalReference": "flipclock!UseDefinitionMap:type"
            },
            {
              "kind": "Content",
              "text": "<V>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useDefinitionMap"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!UseDefinitionMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UseDefinitionMap<V> = "
            },
            {
              "kind": "Content",
              "text": "{\n    map: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, V>;\n    define: (key: string | "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, V>, value?: V) => void;\n    unset: (keys: string | string[]) => void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "UseDefinitionMap",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!useDictionary:function(1)",
          "docComment": "/**\n * Create a new date string formatter.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDictionary(definitions?: "
            },
            {
              "kind": "Reference",
              "text": "DefinitionTerms",
              "canonicalReference": "flipclock!DefinitionTerms:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    map: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, string | "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    define: (key: string | "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": ">, value?: string | "
            },
            {
              "kind": "Reference",
              "text": "Translator",
              "canonicalReference": "flipclock!Translator:type"
            },
            {
              "kind": "Content",
              "text": " | undefined) => void;\n    translate: (key: string) => string;\n    unset: (keys: string | string[]) => void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "definitions",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useDictionary"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!useDigitizer:function(1)",
          "docComment": "/**\n * Create a digiter that can be used to convert a string into arrays of individual characters.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDigitizer(): "
            },
            {
              "kind": "Reference",
              "text": "DigitizerContext",
              "canonicalReference": "flipclock!DigitizerContext:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useDigitizer"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!useDurationFormats:function(1)",
          "docComment": "/**\n * A composable that creates dictionary and formatter for durations.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDurationFormats(options?: "
            },
            {
              "kind": "Reference",
              "text": "DurationFormatOptions",
              "canonicalReference": "flipclock!DurationFormatOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseDurationFormats",
              "canonicalReference": "flipclock!UseDurationFormats:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useDurationFormats"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!UseDurationFormats:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UseDurationFormats = "
            },
            {
              "kind": "Content",
              "text": "{\n    map: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "DurationMapDefinition",
              "canonicalReference": "flipclock!DurationMapDefinition:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    define: "
            },
            {
              "kind": "Reference",
              "text": "DefineFunction",
              "canonicalReference": "flipclock!DefineFunction:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DurationMapDefinition",
              "canonicalReference": "flipclock!DurationMapDefinition:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    duration: (left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", keys?: (keyof "
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "flipclock!Duration:type"
            },
            {
              "kind": "Content",
              "text": ")[]) => "
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "flipclock!Duration:type"
            },
            {
              "kind": "Content",
              "text": ";\n    format: (left: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", right: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ", format: string) => string;\n    unset: "
            },
            {
              "kind": "Reference",
              "text": "UnsetFunction",
              "canonicalReference": "flipclock!UnsetFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "UseDurationFormats",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 24
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!useSequencer:function(1)",
          "docComment": "/**\n * A composable that creates or uses a charset to increment and decrement face values.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSequencer(options?: "
            },
            {
              "kind": "Reference",
              "text": "SequencerOptions",
              "canonicalReference": "flipclock!SequencerOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SequencerContext",
              "canonicalReference": "flipclock!SequencerContext:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useSequencer"
        },
        {
          "kind": "Function",
          "canonicalReference": "flipclock!watchEffect:function(1)",
          "docComment": "/**\n * Create a signal \"watch\" effect.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function watchEffect(callback: "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "watchEffect"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flipclock!WriteableComputedRef:type",
          "docComment": "/**\n * A writeable computed ref.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type WriteableComputedRef<T> = "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "flipclock!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "WriteableComputedRef",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        }
      ]
    }
  ]
}
